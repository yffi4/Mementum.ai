version: "3.8"

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15
    container_name: notes_postgres
    environment:
      POSTGRES_DB: notes_db
      POSTGRES_USER: notes_user
      POSTGRES_PASSWORD: notes_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - notes_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notes_user -d notes_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кеширования и Celery
  redis:
    image: redis:7-alpine
    container_name: notes_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - notes_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI приложение
  backend:
    build: .
    container_name: notes_backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=notes_db
      - DB_USER=notes_user
      - DB_PASSWORD=notes_password
      - SECRET_KEY=your-super-secret-key-change-in-production
      - FRONTEND_URLS=http://localhost:3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=your-openai-api-key
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - notes_network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        while ! pg_isready -h postgres -p 5432 -U notes_user; do
          sleep 2;
        done &&
        echo 'Database is ready!' &&
        alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Celery worker (опционально)
  celery_worker:
    build: .
    container_name: notes_celery_worker
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=notes_db
      - DB_USER=notes_user
      - DB_PASSWORD=notes_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=your-openai-api-key
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - notes_network
    command: celery -A tasks worker --loglevel=info

  # Celery beat (опционально, для периодических задач)
  celery_beat:
    build: .
    container_name: notes_celery_beat
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=notes_db
      - DB_USER=notes_user
      - DB_PASSWORD=notes_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=your-openai-api-key
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - notes_network
    command: celery -A tasks beat --loglevel=info

volumes:
  postgres_data:
  redis_data:

networks:
  notes_network:
    driver: bridge
